import {
  VToolbar,
  VToolbarTitle
} from "./chunk-2C6JNZXQ.js";
import "./chunk-UULQTYVO.js";
import "./chunk-WKN7PCGO.js";
import "./chunk-BWTZO3PY.js";
import "./chunk-TMISD7QZ.js";
import {
  makeVariantProps
} from "./chunk-CODFOZFF.js";
import "./chunk-CKC3PID2.js";
import "./chunk-5GA2ZZC2.js";
import "./chunk-3CZZOXCU.js";
import "./chunk-BAW7EU5Z.js";
import "./chunk-RD3IUTIP.js";
import "./chunk-WZOAPDUX.js";
import "./chunk-CRKY4RA6.js";
import "./chunk-RNQ55ZJ2.js";
import "./chunk-ZF2LBG3M.js";
import "./chunk-XLORIT5Z.js";
import {
  genericComponent,
  makeComponentProps,
  propsFactory,
  provideDefaults,
  useRender
} from "./chunk-YL7SERVA.js";
import {
  createVNode,
  toRef
} from "./chunk-J6475X5X.js";
import "./chunk-76J2PTFD.js";

// node_modules/vuetify/lib/components/VToolbar/VToolbarItems.mjs
var makeVToolbarItemsProps = propsFactory({
  ...makeComponentProps(),
  ...makeVariantProps({
    variant: "text"
  })
}, "VToolbarItems");
var VToolbarItems = genericComponent()({
  name: "VToolbarItems",
  props: makeVToolbarItemsProps(),
  setup(props, _ref) {
    let {
      slots
    } = _ref;
    provideDefaults({
      VBtn: {
        color: toRef(props, "color"),
        height: "inherit",
        variant: toRef(props, "variant")
      }
    });
    useRender(() => {
      var _a;
      return createVNode("div", {
        "class": ["v-toolbar-items", props.class],
        "style": props.style
      }, [(_a = slots.default) == null ? void 0 : _a.call(slots)]);
    });
    return {};
  }
});
export {
  VToolbar,
  VToolbarItems,
  VToolbarTitle
};
//# sourceMappingURL=vuetify_lib_components_VToolbar_index__mjs.js.map
